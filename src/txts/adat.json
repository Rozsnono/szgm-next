{
    "data": [
        "Soroljon fel 5 halmazműveletet jelöléssel együtt\r\nUnió (UNION): Az 'UNION' művelet segítségével össze tudod fűzni két vagy több eredményhalmazt úgy, hogy az eredmény tartalmazza az összes egyedi sor a bemeneti halmazokból.",
        "Milyen formában jelennek meg az adatok a relációkban? Mit tárol egy sor és egy oszlop? Mi határozza meg egy reláció fokszámát? Hányadfokú a példareláció? Példa: Gépjármű(alvázszám, motorszám, szín, évjárat, ár)\r\nAz adatok relációs adatbázisban táblákban, vagyis relációkban tárolódnak. A relációkban az adatok két dimenzióban jelennek meg: sorokban és oszlopokban.\nSorok: Egy relációban minden sor egy konkrét adatpontot reprezentál, vagyis egy konkrét entitást. A sorokat gyakran rekordoknak vagy bejegyzéseknek is nevezik, és minden rekord egyedi adatokat tartalmaz.\nOszlopok: Az oszlopok meghatározzák az adatok típusát és tulajdonságait. Minden oszlop egy adatcsoportot tartalmaz, például az adott rekord alvázszámát, motorszámát, színét stb.\nA reláció fokszáma az oszlopok számával egyenlő. Tehát egy reláció fokszáma meghatározza, hogy hány oszlopa van, és ezek milyen adatokat tárolnak.\nA példaként megadott 'Gépjármű' reláció fokszáma 5, mivel 5 oszlopa van, és ezek az alvázszám, motorszám, szín, évjárat és ár adatokat tárolják. A relációban minden sor egy gépjármű adatait tartalmazza, és minden oszlop egy meghatározott tulajdonságot ír le a gépjárművel kapcsolatban.",
        "Miért jó, hogy ugyanannyi állomány legyen sűrű indexelésnél? Legalább 2 példa\r\nKonzisztencia és párhuzamosítás: Az azonos méretű állományok egyszerűsítik a rendszerkezelést és a párhuzamos feldolgozást.\nEgyszerűbb blokkméret optimalizáció: Az azonos méretű állományok könnyebbé teszik az egységes blokkméret fenntartását, ami javítja az adatbázis hatékonyságát.",
        "Az adatbázis-kezelő rendszer SQL-utasításának lefordításával kapcsolatosan, írd le a lekérdezés fordításának 3 fontos lépését, és írj róluk 1-1 mondatot\r\nA felhasználó lekérdezéseit, adatmódosító utasításait a lekérdezés feldolgozó lefordítja adatbázis műveletekre, és végre is hajtja a műveleteket. A lekérdezés fordítás három fontosabb lépésre osztható fel:\n1. Elemzés: a lekérdezést és annak szerkezetét jellemző elemző fát építünk fel.\n2. Lekérdezés átírás: az elemző fát átkonvertájuk egy kezdeti lekérdezés tervvé, amely rendszerint a lekérdezésnek egy algebrai megvalósítása. A kezdeti tervet később átalakítjuk egy olyan ekvivalens tervvé, amelynek végrehajtási költsége várhatóan kisebb lesz.\n3. Fizikai terv előállítása: a 2. pontban megkapott logikai lekérdezés tervnek átalakítjuk fizikai lekérdezés tervvé. A logikai terv valamennyi operátorának megvalósítására kiválasztunk egy algoritmust, és meghatározzuk ezen operátorok végrehajtási sorrendjét. A fizikai terv a végrehajtáshoz tartozó információkat is tartalmaz pl.: a relációkhoz történő hozzáférés, relációt kell-e rendezni stb.",
        "Adottak az alábbi, lekérdezésekkel kapcsolatos költségbecslési paraméterek. Add meg a paraméterek leírását? Mit értünk az adott parameter kód alatt? M, B(R) vagy B, T(R) vagy T, T/B hányados, V(R, A)\r\nParaméterek, amik a reláció adatainak méretét, és eloszlását becsülik meg.\nA rendszer időnként újraszámolja őket, hogy segítse a lekérdezés optimalizálót.\nParaméter\tLeírás\nM\tA rendelkezésre álló memória pufferek száma. (CSAK a bement, és a közbeeső operátorok eredményeinek tárolására szolgál.)\nB(R) vagy B\tAz R reláció hány blokkban fér el. (közelítő blokkszám)\nT(R) vagy T\tAz R reláció sorainak száma.\nT/B hányados\tR hány sora fér el egy blokkban\nV(R, A)\tAz R reláció A oszlopban található különböző értékek száma.",
        "Sorold fel az SQL utasítás záradékait. A záradékok után kérem felírni a relációalgebrai megfelelőjét is.\r\nWHERE záradék - Relációalgebra: σ (szigma) operátor.\nORDER BY záradék - Relációalgebra: ρ (rho) operátor.\nGROUP BY záradék - Relációalgebra: π (pi) operátor a csoportosításhoz, σ és Π operátorok az aggregációhoz.\nHAVING záradék - Relációalgebra: Π és σ operátorok együttes használata.\nJOIN záradék - Relációalgebra: ⨝ (natural join) operátor, vagy ρ és ⨝ operátorok együttes használata.",
        "Mit jelentenek a röviditések MsSQL-ben magyarul és angolul, plusz 1-2 példa: DDL, DML, DQL, DCL\r\nDDL\tadatdefiníciós (Data Definition Language) - CREATE, ALTER, DROP\nDML\tadatkezelési (Data Manipulation Language)  - INSERT, UPDATE, DELETE\nDQL\tlekérdező (Data Query Language)  - SELECT\nDCL\tadatvezérlő (Data Control Language) - GRANT, COMMIT",
        "A # közé beírandó szöveg:\r\nA lekérdezés egy kifejezés, amelyben az operátorok a #relációalgebrai# műveletek, az operandusok a #relációk#.",
        "A # közé beírandó szöveg:\r\nA reláció azonsorait, amelyek különböznek az attribúmoktól álló fejléc sorától, soroknak nevezzük. A sorban egy adott attribútumhoz kapcsolodó érték a #komponens#.",
        "A # közé beírandó szöveg:\r\nKomponenseket mindig ugyan olyan sorrendben írjuk le, mint ahogyan az attribútumokat felsoroltuk a #relációsémában#.",
        "A # közé beírandó szöveg:\r\nUNIO halmazművelet során a művelet elvégézéséhez a két relációnak #azonos fokúnak# kell lennie.",
        "A # közé beírandó szöveg:\r\nA kulcs a relációnak egy és csakis egy #sorát határozza meg#.",
        "A # közé beírandó szöveg:\r\nA funkcionális függőség azt jelenti, hogy a tulajdonságok által meghatározott rendszerben egy tulajdonság egyértelműen meghatároz egy vagy több #másik tulajdonságot#."
    ]
}